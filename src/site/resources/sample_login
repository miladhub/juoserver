// ========= FIRST CONNECTION, UP TO PACKET 'SERVER LIST' =========

char CLIENT_0[] = { // CLIENT: SEED, 4 BYTES (IP)
0x82, 0x4a, 0xe6, 0x73 };
char CLIENT_1[] = { // CLIENT: LOGIN REQUEST
0x80, 0x75, 0x73, 0x65, 0x72, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 
0x73, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x5d };
char SERVER_0[] = { // SERVER: GAME SERVER LIST
0xa8, 0x00, 0x2e, 0x5d, 0x00, 0x01, 0x00, 0x00, 
0x52, 0x75, 0x6e, 0x55, 0x4f, 0x20, 0x54, 0x43, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x01, 0x01, 0x00, 0x00, 0x7f };
char CLIENT_2[] = { // CLIENT: SELECT SERVER
0xa0, 0x00, 0x00 };
char SERVER_1[] = { // SERVER: CONNECT TO GAME SERVER (provides the client an authentication key to be used to connect to the server (in this case: 0x60, 0xb5, 0x5f, 0xe2)
0x8c, 0x7f, 0x00, 0x00, 0x01, 0x0a, 0x21, 0x60, 
0xb5, 0x5f, 0xe2 };

// ========= SECOND CONNECTION, FROM PACKET 'GAME SERVER LOGIN' =========

char CLIENT_0[] = { // SEED (4 BYTES, should be the client's IP)
0x60, 0xb5, 0x5f, 0xe2 };
char CLIENT_1[] = { // ServerLoginRequest (contains the authentication key)
0x91, 0x60, 0xb5, 0x5f, 0xe2, 0x75, 0x73, 0x65, 
0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x70, 0x73, 0x77, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00 };
// ============== FROM HERE THE SERVER *COMPRESSES* (Huffman-encodes) the messages ==============
char SERVER_0[] = { 
0xb3, 0x33, 0xc9, 0x97, 0x40, 0x81, 0x7a, 0xa4, 
0xd9, 0x74, 0x76, 0xe4, 0xf3, 0x0c, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0b, 0xfa, 0x43, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 
0x08, 0xdf, 0x37, 0x80, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x2f, 0x20, 0x79, 0xb5, 0x1f, 0x83, 
0x63, 0xd3, 0x32, 0x05, 0xb2, 0xd9, 0xfc, 0xff, 
0x96, 0x70, 0x00, 0x00, 0x00, 0x1f, 0x46, 0x41, 
0xe3, 0xe2, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x17, 0x90, 0x3c, 0xdb, 0x39, 0xd2, 0x1f, 
0x1e, 0x91, 0xad, 0x5e, 0x40, 0x00, 0x00, 0x00, 
0x00, 0x8a, 0x72, 0x1c, 0x1c, 0xdd, 0x20, 0xf1, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0xdf, 
0xe7, 0xce, 0x6b, 0x73, 0x90, 0xfc, 0xf4, 0xc1, 
0x76, 0xb5, 0x8d, 0xc7, 0x88, 0x00, 0x00, 0x00, 
0x0d, 0x11, 0x9e, 0x3c, 0x71, 0x70, 0xb5, 0x78, 
0xbc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xe4, 
0x0f, 0x36, 0xf3, 0x63, 0x50, 0x3c, 0x35, 0x74, 
0x86, 0xed, 0x6b, 0x1b, 0x8f, 0x10, 0x00, 0x00, 
0x00, 0x3a, 0xaf, 0x43, 0x83, 0xc5, 0xda, 0x0c, 
0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xf2, 
0x07, 0x9b, 0x57, 0xa1, 0xf4, 0x45, 0x79, 0x6a, 
0xf3, 0x0d, 0xc0, 0x76, 0xb5, 0x8d, 0xc7, 0x88, 
0x00, 0x00, 0x01, 0x42, 0x33, 0xa3, 0x86, 0x0f, 
0x18, 0xd8, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x5e, 0x40, 0xf3, 0x6a, 0x46, 0x1f, 0x9e, 
0x99, 0xad, 0x43, 0xf8, 0x87, 0xc5, 0xda, 0xd5, 
0xee, 0x88, 0xaf, 0x30, 0xf8, 0x80, 0x00, 0x1d, 
0xdd, 0xd0, 0x3c, 0xb5, 0x78, 0xc1, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x17, 0x90, 0x3c, 0xda, 
0x8c, 0xf3, 0x0e, 0x37, 0xcf, 0x1e, 0x90, 0xd9, 
0xd6, 0xb1, 0xb8, 0xf1, 0x00, 0x00, 0x00, 0x06, 
0x5c, 0xd5, 0x87, 0x48, 0x7d, 0x2d, 0x9c, 0x87, 
0xd3, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 
0x81, 0xe6, 0xdc, 0x7f, 0x46, 0xa8, 0xdf, 0x1c, 
0x7c, 0xc3, 0x70, 0x1d, 0xad, 0x63, 0x71, 0xe2, 
0x00, 0x00, 0x00, 0x70, 0x4a, 0xfc, 0xbb, 0x58, 
0xf9, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x2f, 0x20, 0x79, 0xb5, 0x8d, 0x0f, 0xc7, 0x1b, 
0xfc, 0x78, 0xe4, 0xb5, 0x8d, 0xc7, 0x88, 0x00, 
0x00, 0x00, 0x0c, 0x48, 0x7e, 0x88, 0xaf, 0x3c, 
0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x11, 
0x49, 0xf3, 0x0f, 0xa7, 0x4e, 0x2e, 0x03, 0xb5, 
0xa8, 0xce, 0x9c, 0x5d, 0xa0, 0xf8, 0xe2, 0x00, 
0x00, 0x00, 0x00, 0xb7, 0x3b, 0xe8 };

/*
Response to ServerLoginRequest, 0x91, two packets:

1. Enable locked client features (http://docs.polserver.com/packets/index.php?Packet=0xB9)
B9
92DB

2. CharacterList
they're 1059 bytes (2118 hex characters)
A9 --> code
0423 --> 1059 in hex

07 --> nr of pcs

pcs (user/psw)

617364657200000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000

776172000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000

000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000

000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000

000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000

000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000

000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000

0A --> nr of cities

cities (index + name/location)

00
59657700000000000000000000000000000000000000000000000000000000
54686520456D70617468204162626579000000000000000000000000000000

01
4D696E6F630000000000000000000000000000000000000000000000000000
546865204261726E61636C6500000000000000000000000000000000000000

02
4272697461696E000000000000000000000000000000000000000000000000
537765657420447265616D7320496E6E000000000000000000000000000000

03
4D6F6F6E676C6F770000000000000000000000000000000000000000000000
546865205363686F6C61727320496E6E000000000000000000000000000000

04
5472696E736963000000000000000000000000000000000000000000000000
5468652054726176656C6572277320496E6E00000000000000000000000000

05
4D6167696E6369610000000000000000000000000000000000000000000000
54686520477265617420486F726E732054617665726E000000000000000000

06
4A68656C6F6D00000000000000000000000000000000000000000000000000
546865204D657263656E61727920496E6E0000000000000000000000000000

07
536B6172612042726165000000000000000000000000000000000000000000
5468652046616C636F6E6572277320496E6E00000000000000000000000000

08
56657370657200000000000000000000000000000000000000000000000000
5468652049726F6E776F6F6420496E6E000000000000000000000000000000

09
486176656E0000000000000000000000000000000000000000000000000000
557A657261616E2773204D616E73696F6E0000000000000000000000000000

flags:
000011E8
*/

char CLIENT_2[] = { // PING
0x73, 0x00 };
char SERVER_1[] = { // PONG: same as PING, but compressed
0x76, 0x34 };

//...(more ping-pong was here, I truncated it)

char CLIENT_74[] = { // CHARACTER SELECT
0x5d, 0xed, 0xed, 0xed, 0xed, 0x77, 0x61, 0x72, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
0xaa, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x01, 0x0a, 0x00, 0x00, 
0x65 };

char SERVER_73[] = {
0x78, 0x83, 0x4d };
/*
BD: CLIENT VERSION REQUEST
0003: LENGTH (3 byte)
*/

char CLIENT_75[] = {
0xbd, 0x00, 0x0a, 0x35, 0x2e, 0x30, 0x2e, 0x36, 
0x65, 0x00 };
// CLIENT VERSION RESPONSE
// 000A = 10 (decimal) = length
// 0x35, 0x2e, 0x30, 0x2e, 0x36, 0x65, 0x00 = "5.0.6e" = client version

char SERVER_74[] = { // 512 bytes --> the next message should be appended to this one, and *THEN* decompressed
0x48, 0x00, 0xd0, 0x03, 0xeb, 0xa2, 0x9d, 0xf8, 
0x2f, 0x0a, 0x0c, 0x58, 0xb1, 0x62, 0x00, 0x59, 
0x1c, 0x40, 0x00, 0xd0, 0x80, 0xce, 0xce, 0x0f, 
0xe8, 0x80, 0xca, 0x51, 0x91, 0x03, 0xa8, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 
0x74, 0x27, 0xf4, 0xb3, 0x33, 0xc9, 0x97, 0x40, 
0xb4, 0x06, 0x9f, 0x5c, 0x30, 0xc0, 0x71, 0x8a, 
0x77, 0xe0, 0xbc, 0x28, 0x34, 0xb4, 0x06, 0x9f, 
0x5c, 0x30, 0xc0, 0x71, 0x8a, 0x77, 0xe0, 0xbc, 
0x28, 0x34, 0xf5, 0xe7, 0x74, 0xf7, 0x00, 0xd0, 
0xd0, 0xb4, 0x06, 0x9f, 0x5c, 0x30, 0xc0, 0x71, 
0x8a, 0x77, 0xe0, 0xbc, 0x28, 0x34, 0xc9, 0x11, 
0xa0, 0x34, 0xfa, 0xe8, 0xa7, 0x7e, 0x0b, 0xca, 
0x18, 0x60, 0x38, 0xb4, 0x50, 0x5c, 0xea, 0x9b, 
0x3d, 0x41, 0xec, 0xa7, 0xcb, 0xe5, 0xd4, 0x08, 
0x57, 0xa1, 0xa3, 0x37, 0x58, 0x19, 0x41, 0x39, 
0x4f, 0x8b, 0xea, 0x0c, 0xe3, 0xd1, 0x60, 0x5b, 
0x69, 0x84, 0x50, 0x23, 0xd7, 0xee, 0x7e, 0xa2, 
0xe5, 0x06, 0x3d, 0xdd, 0xae, 0xd3, 0xb7, 0xc4, 
0xe5, 0xc4, 0xdc, 0x73, 0xce, 0x9f, 0x4b, 0xcf, 
0x5f, 0x70, 0x06, 0x80, 0x5b, 0x23, 0x80, 0x34, 
0xbf, 0xa4, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x0e, 0x19, 0xc3, 0x28, 0x04, 0x98, 0x93, 
0x2b, 0x09, 0x31, 0x26, 0x56, 0x2b, 0x03, 0x49, 
0xdc, 0x88, 0x45, 0x8e, 0xb3, 0xe3, 0xbc, 0x50, 
0x75, 0x1a, 0x0d, 0x06, 0x80, 0x2d, 0x89, 0x40, 
0x34, 0x86, 0x19, 0x03, 0x40, 0xc9, 0x11, 0xa0, 
0x34, 0xfa, 0xe8, 0xa7, 0x7e, 0x0b, 0xca, 0x18, 
0x60, 0x38, 0xb4, 0x50, 0x5c, 0xea, 0x9b, 0x3d, 
0x41, 0xec, 0xa7, 0xcb, 0xe5, 0xd4, 0x08, 0x57, 
0xa1, 0xa3, 0x37, 0x58, 0x19, 0x41, 0x39, 0x4f, 
0x8b, 0xea, 0x0c, 0xe3, 0xd1, 0x60, 0x5b, 0x69, 
0x84, 0x50, 0x23, 0xd7, 0xee, 0x7e, 0xa2, 0xe5, 
0x06, 0x3d, 0xdd, 0xae, 0xd3, 0xb7, 0xc4, 0xe5, 
0xc4, 0xdc, 0x73, 0xce, 0x9f, 0x4b, 0xcf, 0x5f, 
0x70, 0x06, 0x80, 0x84, 0x80, 0x69, 0x38, 0x8e, 
0x7a, 0x92, 0x3a, 0xb3, 0x33, 0xc9, 0x97, 0x40, 
0xb4, 0x06, 0x9f, 0x5c, 0x30, 0xc0, 0x71, 0x8a, 
0x77, 0xe0, 0xbc, 0x28, 0x34, 0x5b, 0x23, 0x80, 
0x34, 0xbf, 0xa4, 0x30, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x0e, 0x19, 0xc3, 0x28, 0x04, 0x98, 
0x93, 0x2b, 0x09, 0x31, 0x26, 0x56, 0x2b, 0x03, 
0x49, 0xdc, 0x88, 0x45, 0x8e, 0xb3, 0xe3, 0xbc, 
0x50, 0x75, 0x1a, 0x0d, 0x06, 0x80, 0x2d, 0x89, 
0x40, 0x34, 0x86, 0x19, 0x03, 0x40, 0xc9, 0x11, 
0xa0, 0x34, 0xfa, 0xe8, 0xa7, 0x7e, 0x0b, 0xca, 
0x18, 0x60, 0x38, 0xb4, 0x50, 0x5c, 0xea, 0x9b, 
0x3d, 0x41, 0xec, 0xa7, 0xcb, 0xe5, 0xd4, 0x08, 
0x57, 0xa1, 0xa3, 0x37, 0x58, 0x19, 0x41, 0x39, 
0x4f, 0x8b, 0xea, 0x0c, 0xe3, 0xd1, 0x60, 0x5b, 
0x69, 0x84, 0x50, 0x23, 0xd7, 0xee, 0x7e, 0xa2, 
0xe5, 0x06, 0x3d, 0xdd, 0xae, 0xd3, 0xb7, 0xc4, 
0xe5, 0xc4, 0xdc, 0x73, 0xce, 0x9f, 0x4b, 0xcf, 
0x5f, 0x70, 0x06, 0x80, 0x44, 0x68, 0x8e, 0x57, 
0x49, 0xf0, 0x68, 0x74, 0x27, 0xf4, 0x80, 0xce, 
0xce, 0x0f, 0xe8, 0x78, 0xa3, 0xe5, 0xc5, 0x8b, 
0x16, 0x2c, 0x58, 0x86, 0x9e, 0xa1, 0xa2, 0x3f, 
0xdc, 0x88, 0x39, 0xac, 0xe7, 0x6c, 0xde, 0x70, 
0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x91, 
0xe4, 0x6a, 0x23, 0x4f, 0x06, 0x09, 0xe4, 0xb8, 
0x96, 0x97, 0x9d, 0x08, 0x66, 0x18, 0xb4, 0x5e, 
0x10, 0x0f, 0x24, 0x33, 0xc9, 0x69, 0x04, 0x76, 
0x2d, 0x23, 0x49, 0xa4, 0x32, 0x19, 0xe4, 0xe2, 
0x66, 0x1a, 0x86, 0x71, 0x69, 0x00, 0x2d, 0x26 };
/*
1B: char locale and body (LoginConfirm), 37 bytes
    00000003: player serial
    00000000: unknown, always zero
    0190: body type
    02E8: x
    0877: y
    00: ?
    00: z
    05: facing
    00FFFFFF: ?
    FF000000: ?
    00: ?
    1C00: server boundary width minus eight.
    1000: server boundary Height
    0000: ?
    00000000: ?

BF: General Information Packet
    0006: length
    0008: Subcommand "Set cursor hue / Set MAP"
    01: trammel

BF: General Information Packet
    0029: length (41)
    0018: Subcommand: "Enable map-diff (files)"
    00000004: number of maps
    For each map:
    * BYTE[4] Number of map patches in this map
    * BYTE[4] Number of static patches in this map
    00000000 00000000
    00000000 00000000
    00000000 00000000
    00000000 00000000

BC: Seasonal Information
    00: spring
    01: play sound on

B9: Enable locked client features (same as before)

20: Draw Game Player
    00000003: creature id
    0190: body type
    00: ?
    83EA: skin color / hue
    10: flag byte
    02E8: xLoc
    0877: yLoc
    0000: unknown2 (0)
    05: direction
    00: zLoc

20: Draw Game Player (same as before)

4F: Overall Light Level
    0C

4E: Personal Light Level
    00000003: creature id
    00: level

20: Draw Game Player (same as before)

78: Draw Object
    0059: length (89 dec)
    00000003: Object Serial
    0190: Graphic ID
    02E8: xLoc
    0877: yLoc
    00: z
    05: facing
    83EA: color
    10: status
    03: notoriety (19 bytes till here)
    loop(7x9=63 bytes): serial, graphic, layer, color (byte[2])
    40000038 0E75 15 ( 0x0E75 & 0x8000 == 0, therefore there's no colour (2 bytes at the end)
    4000003D 13CC 0D
    4000003F 9F03 16 04D9
    40000042 13FF 01
    40000044 9F7B 11 0381
    40000045 952E 04 0090
    40000046 970F 03 06A8
    7FFFFBF3 A03B 0B 044E
    00000000 (4 final bytes set to zero)

11: Status Bar Info
    005B: length (91)
    00000003: player serial
    776172000000000000000000000000000000000000000000000000000000: player name ("war")
    0043: Current Hit Points
    0043: Max Hit Points
    00: Name Change Flag
    05: Status Flag (*)
    00: Sex+Race
    0023: Strength
    0023: Dexterity
    000A: Intelligence
    0023: Current Stamina
    0023: Max Stamina
    000A: Current Mana
    000A: Max Mana
    000003E8: Gold In Pack (1000)
    0002: Armor Rating
    003E: Weight
    (*) If (flag 5 or higher)
    00DE Max Weight
    01 Race
    If (flag 3 or higher )
    00E1 Stats Cap
    00 Followers (Pets)
    05 Followers Max Possible (Pets)
    If (flag 4 or higher)
    0004 Fire Resist
    0003 Cold Resist
    0003 Poison Resist
    0003 Energy Resist
    0000 Luck
    0011 Damage Minimum
    0014 Damage Maximum
    00000000 Tithing points (Paladin Books)

72: Request War Mode
    00: Flag
    003200: unknown1 (always 00 32 00 in testing)
    
78: Draw Object (same as before)

DC: SE Introduced Revision
    00000003 Item/Mob Serial
    42CDB247 Item Revision Hash
    
B9: Enable locked client features
    92DB Feature Bitflag

20: Draw Game Player (same as before)

11: Status Bar Info (same as before)

72: Request War Mode (same as before)

78: Draw Object (same as before)
    
55: Login Complete

5B: Time
    0F hour
    23 minute
    08 second

BC: Seasonal Information (same as before)

BF: General Information Packet
    0006: length
    0008: Set cursor hue / Set MAP
    01: hue (Trammel)
*/

char SERVER_75[] = {
0x8e, 0xc7, 0x92, 0x19, 0x69, 0xe0, 0xe2, 0x35, 
0x10, 0x4e, 0x27, 0x92, 0xe2, 0x5a, 0x5e, 0x41, 
0x33, 0x08, 0x05, 0xa4, 0xcc, 0xe5, 0x16, 0x90, 
0x4c, 0xc7, 0x93, 0x04, 0x76, 0x2d, 0x3a, 0x1c, 
0x4e, 0x42, 0xd1, 0x32, 0xd3, 0x04, 0xf0, 0x67, 
0xc8, 0x23, 0x51, 0xe4, 0x76, 0x2d, 0x20, 0x9c, 
0x4b, 0x4c, 0xc2, 0x01, 0xe4, 0xb4, 0xbc, 0xf0, 
0x43, 0x1a, 0x8e, 0x41, 0xce, 0x1a, 0xf5, 0xe7, 
0x74, 0xf7, 0x00, 0xd0, 0xd0 };
/*
NOTE: I decompressed the last two server messages (SERVER_74 e SERVER_75) TOGETHER
SEE: SendQueue.cs - private static int m_CoalesceBufferSize = 512;
If you set it to e.g. 1500 (eth0's MTU) the two packets will be sent together
and the client works ANYWAY (there must be a "collapsing" mechanism in the client).

AE: Unicode Speech message
    00E4: length (228)
    FFFFFFFF ID
    FFFF Model
    00 Type
    03B2 Color
    0003 Font
    454E5500 Language
    53797374656D000000000000000000000000000000000000000000000000 Name ("System")
    00570065006C0063006F006D0065002C00200077006100720021002000540068006500720065002000690073002000630075007200720065006E0074006C007900200031002000750073006500720020006F006E006C0069006E0065002C002000770069007400680020003600390020006900740065006D007300200061006E0064002000330020006D006F00620069006C0065007300200069006E002000740068006500200077006F0072006C0064002E
        "Welcome, war! There is currently 1 user online, with 69 items and 3 mobiles in the world."
        (obtained stripping off the '00's)
        TODO: find a way to send unicode from the server
    0000

4F: Overall Light Level
    0C
    
4E: Personal Light Level
    00000003: creature id
    00: level
*/

char CLIENT_76[] = {
    //Double Click (5 bytes)
    0x06, 0x40, 0x00, 0x00, 0x38 };

char CLIENT_77[] = {
    //GetPlayerStatus (10 bytes)
    0x34, 0xed, 0xed, 0xed, 0xed,
    0x05, 0x00, 0x00, 0x00, 0x03,

    //ClientVersion (lengh 10=0x0A)
    0xbd, 0x00, 0x0a, 0x35, 0x2e,
    0x30, 0x2e, 0x36, 0x65, 0x00, // --> 5.0.6e

    //General Information Packet (lengh 13=0x0D)
    0xbf, 0x00, 0x0d, 0x00, 0x05,
    0x00, 0x00, 0x03, 0x20, 0x01,
    0xff, 0xff, 0xa7, 

    //General Information Packet (lengh 9)
    0xbf, 0x00, 0x09, 0x00, 0x0b,
    0x45, 0x4e, 0x55, 0x00,

    //General Information Packet (lengh 10=0x0A)
    0xbf, 0x00, 0x0a, 0x00, 0x0f,
    0x0a, 0x00, 0x00, 0x00, 0x1f,

    //Double Click (5 bytes)
    0x06, 0x80, 0x00, 0x00, 0x03,

    //GetPlayerStatus (10 bytes)
    0x34, 0xed, 0xed, 0xed, 0xed,
    0x04, 0x00, 0x00, 0x00, 0x03,

    //Mega Cliloc (7 bytes)
    0xd6, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03 };

char SERVER_76[] = {
0x73, 0x14, 0x17, 0x31, 0xb7, 0xa0, 0x6d, 0x9e,
0xf1, 0xc0, 0xa0, 0xe5, 0x57, 0x74, 0x43, 0xe7, 
0xbc, 0x2f, 0x28, 0x2e, 0x60, 0xa0, 0x43, 0x54, 
0x92, 0x0d, 0x27, 0x71, 0xc0, 0x11, 0xaa, 0x0b, 
0x98, 0x28, 0x3d, 0x35, 0xee, 0xa1, 0xf2, 0x92, 
0x46, 0xa8, 0x2e, 0x60, 0xa0, 0x6d, 0xd6, 0xa4, 
0x07, 0xcb, 0xa9, 0x05, 0x41, 0x73, 0x05, 0x02, 
0x2e, 0xac, 0x30, 0x34, 0x30, 0xc6, 0x71, 0x41, 
0x73, 0x05, 0x02, 0xaa, 0xc3, 0x06, 0x40, 0x76, 
0x33, 0x28, 0x2e, 0x60, 0xa0, 0x96, 0xae, 0xf4, 
0x07, 0xc9, 0x99, 0x0b, 0x50, 0x5c, 0xc1, 0x41, 
0xc3, 0xa7, 0xc4, 0x1f, 0x3c, 0x96, 0x45, 0x05, 
0xcc, 0x34, 0x84, 0x94, 0x1c, 0xae, 0x1a, 0x07, 
0xb7, 0x1f, 0x68, 0x84, 0x94, 0x08, 0x65, 0x4b, 
0xe5, 0xef, 0x1f, 0x40, 0x84, 0x94, 0x1e, 0x95, 
0x61, 0xa0, 0x66, 0xad, 0x84, 0x94, 0x0d, 0xb5, 
0x63, 0x3d, 0x79, 0x06, 0x80, 0x84, 0x94, 0x08, 
0xb9, 0x6b, 0x85, 0x1e, 0xe4, 0xf4, 0x84, 0x94, 
0x0a, 0x56, 0x1b, 0xdf, 0xba, 0x74, 0x84, 0x94, 
0x12, 0xca, 0xc6, 0x8c, 0x67, 0x5a, 0x84, 0x94, 
0x1c, 0x39, 0x6b, 0x81, 0x1a, 0xd3, 0x40 };
/*

24: Draw Container
    40000038: item id
    003C: model-Gump (0x003c is backpack)

3C009D0008400000390FF1000001009D00544000003800004000003A0EED0003E8002700594000003800004000003B0F52000001007A00634000003800004000003C0A28000001005200694000003800004000003E0E2100000300210044400000380000400000400E2100003200730074400000380000400000410F9F0000010036006A4000003800004000004313FF00000100650051400000380000DC4000003943688BDDDC4000003A400DCCE7DC4000003B4021D96CDC4000003C401FC42DDC4000003E41A545DFDC40000040402196B0DC40000041401FC15ADC4000004341D25903

3C: Add multiple Items In Container
    009D: length (157)
    0008: number of Items to add 
    LOOP (8x19=152=157-5)
        40000039 item serial 
        0FF1 item ID (objtype)
        00 unknown (0x00)
        0001 item amount (stack) 
        009D X
        0054 Y
        40000038 Container serial 
        0000 item color
        
        4000003A 0EED 00 03E8 0027 0059 40000038 0000
        4000003B 0F52 00 0001 007A 0063 40000038 0000
        4000003C 0A28 00 0001 0052 0069 40000038 0000
        4000003E 0E21 00 0003 0021 0044 40000038 0000
        40000040 0E21 00 0032 0073 0074 40000038 0000
        40000041 0F9F 00 0001 0036 006A 40000038 0000
        40000043 13FF 00 0001 0065 0051 40000038 0000

DC: SE Introduced Revision
    40000039
    43688BDD
    
DC
    4000003A
    400DCCE7
    
DC
    4000003B
    4021D96C
    
DC
    4000003C
    401FC42D
    
DC
    4000003E
    41A545DF
    
DC
    40000040
    402196B0
    
DC
    40000041
    401FC15A
    
DC
    40000043
    41D25903
*/
char SERVER_77[] = {
0x43, 0x44, 0xe3, 0x11, 0xf0, 0x01, 0xa4, 0xee, 
0x45, 0xfb, 0x8f, 0xee, 0x23, 0x49, 0xdc, 0x68, 
0x00, 0x34, 0x9d, 0xce, 0xa0, 0x03, 0x49, 0xdc, 
0xa0, 0x00, 0x69, 0x3b, 0x9d, 0x80, 0x0d, 0x27, 
0x71, 0x90, 0x00, 0xd2, 0x77, 0x38, 0x00, 0x06, 
0x93, 0xb8, 0xc4, 0x00, 0x34, 0x9d, 0xca, 0xc0, 
0x03, 0x49, 0xdc, 0x79, 0x00, 0x1a, 0x4e, 0xe6, 
0x74, 0x00, 0x69, 0x3b, 0x92, 0xe0, 0x03, 0x49, 
0xdc, 0xa8, 0x00, 0x69, 0x3b, 0x95, 0xc0, 0x06, 
0x93, 0xb8, 0xe2, 0x00, 0x34, 0x9d, 0xc5, 0xb0, 
0x01, 0xa4, 0xee, 0x73, 0x3e, 0xf8, 0x3e, 0xf8, 
0x06, 0x93, 0xb9, 0x4e, 0x00, 0x34, 0x9d, 0xc4, 
0xa0, 0x03, 0x49, 0xdc, 0x9e, 0x00, 0x34, 0x9d, 
0xc6, 0x60, 0x01, 0xa4, 0xee, 0x3e, 0x80, 0x0d, 
0x27, 0x73, 0x22, 0x00, 0x34, 0x9d, 0xce, 0x70, 
0x00, 0xd2, 0x77, 0x1f, 0x80, 0x0d, 0x27, 0x71, 
0x20, 0x00, 0x34, 0x9d, 0xc5, 0x9f, 0xc9, 0xff, 
0x93, 0xc6, 0x93, 0xb8, 0xf6, 0x00, 0x34, 0x9d, 
0xc9, 0x10, 0x01, 0xa4, 0xee, 0x63, 0x00, 0x0d, 
0x27, 0x72, 0xd0, 0x01, 0xa4, 0xee, 0x61, 0x80, 
0x06, 0x93, 0xb8, 0xde, 0x00, 0x34, 0x9d, 0xc4, 
0x98, 0x00, 0xd2, 0x77, 0x1c, 0xc0, 0x01, 0xa4, 
0xee, 0x2d, 0x00, 0x0d, 0x27, 0x71, 0xae, 0x00, 
0x1a, 0x4e, 0xe3, 0x80, 0x00, 0x34, 0x9d, 0xca, 
0x40, 0x00, 0xd2, 0x77, 0x29, 0x5f, 0xc3, 0xff, 
0x0e, 0x34, 0x9d, 0xc4, 0x10, 0x00, 0xd2, 0x77, 
0x19, 0xf0, 0x01, 0xa4, 0xee, 0x5c, 0x40, 0x06, 
0x93, 0xb9, 0x20, 0x00, 0x1a, 0x4e, 0xe3, 0x9c, 
0x00, 0x69, 0x3b, 0x8f, 0x99, 0xd9, 0xd8, 0xd2, 
0x77, 0x29, 0x60, 0x03, 0x49, 0xdc, 0x80, 0x00, 
0x0d, 0x27, 0x73, 0x20, 0x00, 0x34, 0x9d, 0xc4, 
0xc6, 0x43, 0x21, 0xa4, 0xee, 0x58, 0x40, 0x06, 
0x93, 0xb9, 0x25, 0x00, 0x1a, 0x4e, 0xe4, 0xcc, 
0x00, 0x69, 0x3b, 0x99, 0x50, 0x01, 0xa4, 0xee, 
0x5c, 0xc0, 0x06, 0x93, 0xb9, 0xca, 0x00, 0x1a, 
0x4e, 0xe2, 0x18, 0x00, 0x69, 0x3b, 0x86, 0x80, 
0x47, 0x40, 0x69, 0x7f, 0x48, 0x77, 0x1b, 0x65, 
0xac, 0x6c, 0x61, 0xf9, 0xe3, 0x9a, 0x0c, 0x6f, 
0x9b, 0x57, 0xba, 0x46, 0xe6, 0x83, 0x1b, 0x07, 
0xa7, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x22, 0xd0, 0x84, 0x94, 0x17, 0x35, 
0x64, 0x21, 0x19, 0x06, 0x80, 0x84, 0x94, 0x1e, 
0xc9, 0xc7, 0xa9, 0x96, 0x2b, 0x40, 0x84, 0x94, 
0x08, 0x55, 0x57, 0x75, 0xb3, 0xbe, 0x80, 0x84, 
0x94, 0x13, 0x92, 0xd8, 0x9d, 0x6f, 0x0f, 0x40, 
0x84, 0x94, 0x19, 0xc5, 0x57, 0x75, 0xb6, 0x4d, 
0x84, 0x94, 0x08, 0xf5, 0x57, 0xcb, 0xfa, 0xe8, 
0x84, 0x94, 0x18, 0xf5, 0x57, 0xe1, 0x1f, 0x26, 
0x80, 0x5b, 0x23, 0x80, 0x34, 0xbf, 0xa4, 0x30, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x19, 
0xc3, 0x28, 0x04, 0x98, 0x93, 0x2b, 0x09, 0x31, 
0x26, 0x56, 0x2b, 0x03, 0x49, 0xdc, 0x88, 0x45, 
0x8e, 0xb3, 0xe3, 0xbc, 0x50, 0x75, 0x1a, 0x0d, 
0x06, 0x80, 0x2d, 0x89, 0x40, 0x34, 0x80, 0xcc, 
0xe9, 0xce, 0x88, 0x06, 0x81, 0xa0, 0xe5, 0x87, 
0x00, 0xf8, 0x0d, 0x02, 0x24, 0x73, 0xd4, 0x91, 
0x1c, 0x68, 0x78, 0x85, 0x56, 0x8c, 0x45, 0xe7, 
0x42, 0x18, 0xc4, 0x5a, 0x00, 0x68 };
/*

*/
char CLIENT_78[] = {
//Mega Cliloc (63 bytes = 0x3f)
0xd6, 0x00, 0x3f, 
0x40, 0x00, 0x00, 0x38, 
0x40, 0x00, 0x00, 0x39, 
0x40, 0x00, 0x00, 0x3a, 
0x40, 0x00, 0x00, 0x3b, 
0x40, 0x00, 0x00, 0x3c, 
0x40, 0x00, 0x00, 0x3d, 
0x40, 0x00, 0x00, 0x3e, 
0x40, 0x00, 0x00, 0x3f, 
0x40, 0x00, 0x00, 0x40, 
0x40, 0x00, 0x00, 0x41, 
0x40, 0x00, 0x00, 0x42, 
0x40, 0x00, 0x00, 0x43, 
0x40, 0x00, 0x00, 0x44, 
0x40, 0x00, 0x00, 0x45, 
0x40, 0x00, 0x00, 0x46 };
char SERVER_78[] = {
0xe5, 0x89, 0x63, 0xea, 0x0b, 0x98, 0x19, 0x08, 
0x46, 0x40, 0x57, 0x49, 0x5f, 0x18, 0x0e, 0x38, 
0x75, 0xf9, 0xd7, 0x20, 0x65, 0x41, 0xc5, 0xe1, 
0xa6, 0x19, 0x1b, 0x98, 0xc4, 0x40, 0x0c, 0x81, 
0x25, 0x18, 0x8c, 0x81, 0x61, 0x18, 0x89, 0x29, 
0x25, 0x29, 0x60, 0x06, 0x80, 0xe5, 0x89, 0x01, 
0xf5, 0x07, 0x28, 0x1a, 0x20, 0x7b, 0x71, 0xf1, 
0x5f, 0x01, 0x20, 0x67, 0x7a, 0x16, 0x99, 0xf3, 
0xc1, 0xe0, 0x58, 0x03, 0x8e, 0x1d, 0x7e, 0x45, 
0x90, 0x00, 0x34, 0xe5, 0x8f, 0x49, 0xf5, 0x02, 
0x18, 0x09, 0x7c, 0xbd, 0xe3, 0x8e, 0x34, 0x3d, 
0x51, 0xfc, 0x00, 0xa5, 0x94, 0xb2, 0x96, 0x31, 
0x09, 0x32, 0x00, 0x52, 0xcc, 0x80, 0x99, 0x73, 
0x32, 0x04, 0x00, 0x1c, 0x70, 0xeb, 0xf2, 0x2c, 
0xa8, 0x01, 0xa0, 0xe5, 0x8c, 0x13, 0xea, 0x0f, 
0x48, 0x18, 0x68, 0x19, 0xa8, 0xae, 0xf4, 0x7a, 
0x80, 0x71, 0xc3, 0xbd, 0x24, 0x50, 0x00, 0x71, 
0x73, 0xa6, 0x77, 0x00, 0x29, 0x65, 0x2c, 0x1c, 
0x60, 0x14, 0xb2, 0xb4, 0x00, 0xa5, 0x8c, 0x44, 
0x00, 0x80, 0x03, 0x8c, 0x01, 0xf3, 0x3a, 0xe4, 
0x07, 0x60, 0x71, 0x80, 0x64, 0x0e, 0xb0, 0x02, 
0x96, 0x0e, 0x29, 0xca, 0x80, 0x71, 0x80, 0x4c, 
0xc0, 0x71, 0x7c, 0xf1, 0x8a, 0xc9, 0x92, 0x51, 
0x88, 0x4c, 0x92, 0x80, 0x1a, 0xe5, 0x8c, 0x31, 
0xf5, 0x03, 0x6c, 0x0c, 0x67, 0xaf, 0x20, 0x2b, 
0xe1, 0x68, 0xe8, 0x0e, 0x38, 0x77, 0xa4, 0x8a, 
0x00, 0x00, 0x68, 0xe5, 0x88, 0xd3, 0xea, 0x0f, 
0x60, 0x44, 0xf5, 0x32, 0xc5, 0x15, 0xe3, 0x2b, 
0x88, 0x0e, 0x38, 0x75, 0xf9, 0x14, 0xcc, 0x1c, 
0x5c, 0xee, 0xf9, 0x16, 0x40, 0x1c, 0x5c, 0xee, 
0xe1, 0x15, 0x84, 0x1c, 0x5c, 0xef, 0x01, 0x12, 
0x60, 0xe2, 0xe7, 0xe8, 0x44, 0x98, 0x38, 0xb9, 
0xf0, 0xe4, 0x49, 0x83, 0x8c, 0x03, 0x20, 0x75, 
0xc8, 0x12, 0x50, 0x71, 0x7c, 0xf1, 0x8a, 0xc9, 
0x89, 0x8c, 0x42, 0x62, 0x60, 0x06, 0x80, 0xe5, 
0x89, 0x29, 0xf5, 0x02, 0x2c, 0x3f, 0x70, 0xa3, 
0xdc, 0x98, 0xe3, 0x43, 0xd5, 0x12, 0xa6, 0x31, 
0x09, 0x32, 0x00, 0x52, 0xcc, 0x80, 0x99, 0x33, 
0x20, 0x06, 0x54, 0x1c, 0x70, 0xef, 0x49, 0x14, 
0x00, 0x00, 0xd0, 0xe5, 0x86, 0x7c, 0xfa, 0x81, 
0x0a, 0x05, 0x77, 0x5b, 0x3b, 0x95, 0xe5, 0x18, 
0xd0, 0x1c, 0x70, 0xeb, 0xf2, 0x24, 0xc1, 0xc6, 
0x01, 0x90, 0x3a, 0xc0, 0x0a, 0x58, 0x01, 0xa0, 
0xe5, 0x8c, 0xa9, 0xf5, 0x02, 0x80, 0xc3, 0x7b, 
0xf7, 0x48, 0xe3, 0x43, 0xd5, 0x19, 0xa4, 0xa5, 
0x2c, 0x62, 0x12, 0x64, 0x00, 0xa5, 0x99, 0x01, 
0x32, 0x66, 0x40, 0x0c, 0xa8, 0x38, 0xe1, 0xd7, 
0xe4, 0x52, 0x50, 0x03, 0x40, 0xe5, 0x8c, 0x31, 
0xf5, 0x04, 0xb0, 0x18, 0xd1, 0x8c, 0xe8, 0xae, 
0xf4, 0x62, 0x01, 0xc7, 0x0e, 0xf4, 0x91, 0x40, 
0x00, 0x0d, 0xe5, 0x8a, 0x61, 0xf5, 0x04, 0xe0, 
0x7f, 0x13, 0xad, 0xe1, 0x95, 0xe3, 0x27, 0x70, 
0x07, 0x1c, 0x3a, 0xfc, 0x8a, 0x66, 0x0e, 0x2e, 
0x74, 0xce, 0xe0, 0x05, 0x2c, 0xa5, 0x83, 0x8c, 
0x02, 0x96, 0x56, 0x80, 0x10, 0x01, 0x88, 0x80, 
0x09, 0x83, 0x8c, 0x01, 0xf3, 0x38, 0x32, 0x03, 
0x9c, 0x92, 0x8e, 0xc0, 0xe3, 0x00, 0xc8, 0x1d, 
0x72, 0x04, 0x94, 0x1c, 0x53, 0x95, 0x00, 0xe3, 
0x00, 0xb0, 0x80, 0xe2, 0xf9, 0xe3, 0x15, 0xae, 
0x67, 0x28, 0x62, 0x2e, 0x67, 0x28, 0x00, 0xd0, 
0xe5, 0x8a, 0x61, 0xf5, 0x07, 0x0c, 0x3f, 0x70, 
0x23, 0x5a, 0x15, 0xe3, 0x27, 0x70, 0x07, 0x1c, 
0x3a, 0xfc, 0x8a, 0x66, 0x0e, 0x2e, 0x74, 0xce, 
0xe0, 0x05, 0x2c, 0xa5, 0x83, 0x8c, 0x02, 0x96 };
/*

*/
char CLIENT_79[] = {
0x06, 0x40, 0x00, 0x00, 0x38 };
char SERVER_79[] = {
0x56, 0x80, 0x10, 0x01, 0x88, 0x80, 0x09, 0x83, 
0x8c, 0x01, 0xf3, 0x38, 0x32, 0x03, 0x9c, 0x92, 
0x8e, 0xc0, 0xe3, 0x00, 0xc8, 0x1d, 0x72, 0x04, 
0x94, 0x1c, 0x53, 0x95, 0x00, 0xe3, 0x00, 0xb0, 
0x80, 0xe2, 0xf9, 0xe3, 0x15, 0xa4, 0xa5, 0x84, 
0x62, 0x24, 0xa5, 0x84, 0x00, 0xd0, 0xe5, 0x86, 
0x7c, 0xfa, 0x83, 0x38, 0x05, 0x77, 0x5b, 0x64, 
0x2b, 0xca, 0x33, 0x28, 0x0e, 0x38, 0x75, 0xf9, 
0x16, 0x40, 0x1c, 0x60, 0x19, 0x03, 0xac, 0x00, 
0xa5, 0x80, 0x1a, 0xe5, 0x86, 0x7c, 0xfa, 0x81, 
0x1e, 0x05, 0x7c, 0xbf, 0xa9, 0x5e, 0xe1, 0xe5, 
0xc0, 0x71, 0xc3, 0xaf, 0xc8, 0xb2, 0x00, 0xe3, 
0x00, 0xc8, 0x1d, 0x60, 0x05, 0x2c, 0x00, 0xd0, 
0xe5, 0x86, 0x7c, 0xfa, 0x83, 0x1e, 0x05, 0x7e, 
0x11, 0xf2, 0x15, 0xde, 0x37, 0x80, 0x1c, 0x70, 
0xeb, 0xf2, 0x2c, 0x80, 0x38, 0xc0, 0x32, 0x07, 
0x58, 0x01, 0x4b, 0x00, 0x34, 0x73, 0x14, 0x17, 
0x31, 0xb7, 0xa0, 0x6d, 0x9e, 0xf1, 0xc0, 0xa0, 
0xe5, 0x57, 0x74, 0x43, 0xe7, 0xbc, 0x2f, 0x28, 
0x2e, 0x60, 0xa0, 0x43, 0x54, 0x92, 0x0d, 0x27, 
0x71, 0xc0, 0x11, 0xaa, 0x0b, 0x98, 0x28, 0x3d, 
0x35, 0xee, 0xa1, 0xf2, 0x92, 0x46, 0xa8, 0x2e, 
0x60, 0xa0, 0x6d, 0xd6, 0xa4, 0x07, 0xcb, 0xa9, 
0x05, 0x41, 0x73, 0x05, 0x02, 0x2e, 0xac, 0x30, 
0x34, 0x30, 0xc6, 0x71, 0x41, 0x73, 0x05, 0x02, 
0xaa, 0xc3, 0x06, 0x40, 0x76, 0x33, 0x28, 0x2e, 
0x60, 0xa0, 0x96, 0xae, 0xf4, 0x07, 0xc9, 0x99, 
0x0b, 0x50, 0x5c, 0xc1, 0x41, 0xc3, 0xa7, 0xc4, 
0x1f, 0x3c, 0x96, 0x45, 0x05, 0xcc, 0x34, 0x84, 
0x94, 0x1c, 0xae, 0x1a, 0x07, 0xb7, 0x1f, 0x68, 
0x84, 0x94, 0x08, 0x65, 0x4b, 0xe5, 0xef, 0x1f, 
0x40, 0x84, 0x94, 0x1e, 0x95, 0x61, 0xa0, 0x66, 
0xad, 0x84, 0x94, 0x0d, 0xb5, 0x63, 0x3d, 0x79, 
0x06, 0x80, 0x84, 0x94, 0x08, 0xb9, 0x6b, 0x85, 
0x1e, 0xe4, 0xf4, 0x84, 0x94, 0x0a, 0x56, 0x1b, 
0xdf, 0xba, 0x74, 0x84, 0x94, 0x12, 0xca, 0xc6, 
0x8c, 0x67, 0x5a, 0x84, 0x94, 0x1c, 0x39, 0x6b, 
0x81, 0x1a, 0xd3, 0x40 };
/*

*/
char CLIENT_80[] = {
0xd6, 0x00, 0x23, 0x40, 0x00, 0x00, 0x39, 0x40, 
0x00, 0x00, 0x3a, 0x40, 0x00, 0x00, 0x3b, 0x40, 
0x00, 0x00, 0x3c, 0x40, 0x00, 0x00, 0x3e, 0x40, 
0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x41, 0x40, 
0x00, 0x00, 0x43 };
char SERVER_80[] = {
0xe5, 0x89, 0x01, 0xf5, 0x07, 0x28, 0x1a, 0x20, 
0x7b, 0x71, 0xf1, 0x5f, 0x01, 0x20, 0x67, 0x7a, 
0x16, 0x99, 0xf3, 0xc1, 0xe0, 0x58, 0x03, 0x8e, 
0x1d, 0x7e, 0x45, 0x90, 0x00, 0x34, 0xe5, 0x8f, 
0x49, 0xf5, 0x02, 0x18, 0x09, 0x7c, 0xbd, 0xe3, 
0x8e, 0x34, 0x3d, 0x51, 0xfc, 0x00, 0xa5, 0x94, 
0xb2, 0x96, 0x31, 0x09, 0x32, 0x00, 0x52, 0xcc, 
0x80, 0x99, 0x73, 0x32, 0x04, 0x00, 0x1c, 0x70, 
0xeb, 0xf2, 0x2c, 0xa8, 0x01, 0xa0, 0xe5, 0x8c, 
0x13, 0xea, 0x0f, 0x48, 0x18, 0x68, 0x19, 0xa8, 
0xae, 0xf4, 0x7a, 0x80, 0x71, 0xc3, 0xbd, 0x24, 
0x50, 0x00, 0x71, 0x73, 0xa6, 0x77, 0x00, 0x29, 
0x65, 0x2c, 0x1c, 0x60, 0x14, 0xb2, 0xb4, 0x00, 
0xa5, 0x8c, 0x44, 0x00, 0x80, 0x03, 0x8c, 0x01, 
0xf3, 0x3a, 0xe4, 0x07, 0x60, 0x71, 0x80, 0x64, 
0x0e, 0xb0, 0x02, 0x96, 0x0e, 0x29, 0xca, 0x80, 
0x71, 0x80, 0x4c, 0xc0, 0x71, 0x7c, 0xf1, 0x8a, 
0xc9, 0x92, 0x51, 0x88, 0x4c, 0x92, 0x80, 0x1a, 
0xe5, 0x8c, 0x31, 0xf5, 0x03, 0x6c, 0x0c, 0x67, 
0xaf, 0x20, 0x2b, 0xe1, 0x68, 0xe8, 0x0e, 0x38, 
0x77, 0xa4, 0x8a, 0x00, 0x00, 0x68, 0xe5, 0x89, 
0x29, 0xf5, 0x02, 0x2c, 0x3f, 0x70, 0xa3, 0xdc, 
0x98, 0xe3, 0x43, 0xd5, 0x12, 0xa6, 0x31, 0x09, 
0x32, 0x00, 0x52, 0xcc, 0x80, 0x99, 0x33, 0x20, 
0x06, 0x54, 0x1c, 0x70, 0xef, 0x49, 0x14, 0x00, 
0x00, 0xd0, 0xe5, 0x8c, 0xa9, 0xf5, 0x02, 0x80, 
0xc3, 0x7b, 0xf7, 0x48, 0xe3, 0x43, 0xd5, 0x19, 
0xa4, 0xa5, 0x2c, 0x62, 0x12, 0x64, 0x00, 0xa5, 
0x99, 0x01, 0x32, 0x66, 0x40, 0x0c, 0xa8, 0x38, 
0xe1, 0xd7, 0xe4, 0x52, 0x50, 0x03, 0x40, 0xe5, 
0x8c, 0x31, 0xf5, 0x04, 0xb0, 0x18, 0xd1, 0x8c, 
0xe8, 0xae, 0xf4, 0x62, 0x01, 0xc7, 0x0e, 0xf4, 
0x91, 0x40, 0x00, 0x0d, 0xe5, 0x8a, 0x61, 0xf5, 
0x07, 0x0c, 0x3f, 0x70, 0x23, 0x5a, 0x15, 0xe3, 
0x27, 0x70, 0x07, 0x1c, 0x3a, 0xfc, 0x8a, 0x66, 
0x0e, 0x2e, 0x74, 0xce, 0xe0, 0x05, 0x2c, 0xa5, 
0x83, 0x8c, 0x02, 0x96, 0x56, 0x80, 0x10, 0x01, 
0x88, 0x80, 0x09, 0x83, 0x8c, 0x01, 0xf3, 0x38, 
0x32, 0x03, 0x9c, 0x92, 0x8e, 0xc0, 0xe3, 0x00, 
0xc8, 0x1d, 0x72, 0x04, 0x94, 0x1c, 0x53, 0x95, 
0x00, 0xe3, 0x00, 0xb0, 0x80, 0xe2, 0xf9, 0xe3, 
0x15, 0xa4, 0xa5, 0x84, 0x62, 0x24, 0xa5, 0x84, 
0x00, 0xd0 };
/*

*/
char CLIENT_81[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x67 };
char CLIENT_82[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x41 };
char CLIENT_83[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x2a };
char CLIENT_84[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x34 };
char CLIENT_85[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x6c };
char CLIENT_86[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x79 };
char CLIENT_87[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x5b };
char CLIENT_88[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x49 };
char CLIENT_89[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x4d };
char CLIENT_90[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x60 };
char CLIENT_91[] = {
0x73, 0x00 };
char SERVER_81[] = {
0x76, 0x34 };
/*
7300
*/
char CLIENT_92[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x3c };
char CLIENT_93[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x44 };
char CLIENT_94[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x79 };
char CLIENT_95[] = {
0xbf, 0x00, 0x06, 0x00, 0x24, 0x33 };
